name: Deploy Spring Boot App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
     
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
     
    - name: Build project with Maven
      run: mvn clean package -DskipTests
     
    - name: Upload JAR to server via SCP
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "target/products-0.0.1-SNAPSHOT.jar"
        target: "${{ secrets.DEPLOY_DIR }}"
         
    - name: Restart Spring Boot app on server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "‚úÖ Starting deployment process..."
          
          # Create directory if it doesn't exist
          mkdir -p ${{ secrets.DEPLOY_DIR }}/target
          
          # Check if JAR exists
          JAR_PATH="${{ secrets.DEPLOY_DIR }}/target/products-0.0.1-SNAPSHOT.jar"
          if [ ! -f "$JAR_PATH" ]; then
            echo "‚ùå JAR file not found at: $JAR_PATH"
            echo "Contents of deploy directory:"
            ls -la ${{ secrets.DEPLOY_DIR }}
            exit 1
          fi
          
          echo "‚úÖ JAR file found at: $JAR_PATH"
          
          # Stop existing process
          echo "üîÑ Stopping existing Java processes..."
          pkill -f 'products-0.0.1-SNAPSHOT.jar' || true
          sleep 3
          
          # Start new process
          echo "üöÄ Starting new application..."
          cd ${{ secrets.DEPLOY_DIR }}
          nohup java -jar target/products-0.0.1-SNAPSHOT.jar > app.log 2>&1 &
          
          # Check if process started
          sleep 2
          if pgrep -f 'products-0.0.1-SNAPSHOT.jar' > /dev/null; then
            echo "‚úÖ Application started successfully!"
          else
            echo "‚ùå Failed to start application"
            echo "Last few lines of log:"
            tail -n 10 app.log || true
            exit 1
          fi